@page "/groups/create"
@using Microsoft.EntityFrameworkCore
@using BugColonyProject.Models
@using BugColonyProject.Data
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager
@inherits OwningComponentBase

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Group</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Group" OnValidSubmit="AddGroup" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Group.Name" class="form-control" /> 
                <ValidationMessage For="() => Group.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="Group.Description" class="form-control" /> 
                <ValidationMessage For="() => Group.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="alliance" class="form-label">Alliance:</label> 
                <InputSelect id="alliance" @bind-Value="Group.Alliance" class="form-control">
                    @foreach (var value in Enum.GetValues<BugAlliance>())
                    {
                        <option value="@value">@value</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => Group.Alliance" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/groups">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Group Group { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddGroup()
    {
        DbContext.Group.Add(Group);
        await DbContext.SaveChangesAsync();
        NavigationManager.NavigateTo("/groups");
    }
}
